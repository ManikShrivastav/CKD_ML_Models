# -*- coding: utf-8 -*-
"""IBD_Data_Wrangling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10xqATba52UA5fHV3RNqUG7qnf0VF3sow

Dataset Information
Additional Information

We use the following representation to collect the dataset
                        age		-	age
			bp		-	blood pressure
			sg		-	specific gravity
			al		-   	albumin
			su		-	sugar
			rbc		-	red blood cells
			pc		-	pus cell
			pcc		-	pus cell clumps
			ba		-	bacteria
			bgr		-	blood glucose random
			bu		-	blood urea
			sc		-	serum creatinine
			sod		-	sodium
			pot		-	potassium
			hemo		-	hemoglobin
			pcv		-	packed cell volume
			wc		-	white blood cell count
			rc		-	red blood cell count
			htn		-	hypertension
			dm		-	diabetes mellitus
			cad		-	coronary artery disease
			appet		-	appetite
			pe		-	pedal edema
			ane		-	anemia
			class		-	class

Has Missing Values?

Yes
"""

import pandas as pd
import seaborn as sn
import numpy as np
import matplotlib.pyplot as plt
from sklearn.impute import SimpleImputer as Imputer
import copy

raw_data = []

with open("/content/Kidney_data.txt") as file:
  for line in file:
    raw_data.append(line.replace(" ","").replace("\t","").replace("\n",""))

del raw_data[-1]

for out_index,data in enumerate(raw_data):
  raw_data[out_index] = data.split(",")

df = pd.DataFrame(raw_data)

pd.set_option('future.no_silent_downcasting', True)
df.replace("?", np.nan, inplace = True)

df = df.drop([25], axis = 1)

df.columns = ["age","bp","sg","al","su","rbc","pc","pcc","ba","bgr","bu","sc","sod","pot","hemo","pcv","wbcc","rbcc","htn","dm","cad","appet","pe","ane","class"]

df["class"] = df["class"].replace("no",np.nan)
df["pe"] = df["pe"].replace("good", np.nan)
df["appet"] = df["appet"].replace("no",np.nan)
df["dm"] = df["dm"].replace("",np.nan)

print(df.isnull().sum().sort_values(ascending = False))

df.shape

plt.figure(figsize = (8,8))
sn.heatmap(data = df.isnull(), cmap = "magma" , annot =  False, cbar = True , vmax = 1, vmin = 0)
plt.title("Graphical Colored Missing Value Representation")
plt.show()

for x in ["age", "bp", "sg", "al", "su", "bgr", "bu", "sc", "sod", "pot", "hemo", "pcv", "wbcc", "rbcc"]:
  df[x] = pd.to_numeric(df[x], errors = "coerce")

numerical_columns = df.select_dtypes(include = "number").columns
categorial_columns = df.select_dtypes(include = "object").columns

prompt = Imputer(missing_values = np.nan, strategy = "mean")
df[numerical_columns] = pd.DataFrame(prompt.fit_transform(df[numerical_columns]))

prompt = Imputer(missing_values = np.nan,strategy = "most_frequent")
df[categorial_columns] = pd.DataFrame(prompt.fit_transform(df[categorial_columns]))

plt.figure(figsize = (9,9))
sn.heatmap(data = df.isnull(), cmap = "magma", annot = False, cbar = True, vmin = 0 , vmax = 1)
plt.title("Graphical Colored Missing Value Representation")
plt.show()

df.head()

df.info()

df.shape

df.to_csv("Final_outcome.csv" , index = True)
df.to_excel("Final_outcome.xlsx" , index = True)

